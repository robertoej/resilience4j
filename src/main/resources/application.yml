spring:
  application:
    name: resilience4j
  jackson:
    serialization:
      indent_output: true

management.metrics.tags.application: ${spring.application.name}

management:
  server:
    port: 8081
  health:
    circuitbreakers:
      enabled: true
    ratelimiters:
      enabled: true
    diskspace:
      enabled: false

  metrics:
    distribution:
      percentiles-histogram:
        http:
          server:
            requests: true
        resilience4j:
          circuitbreaker:
            calls: true

  endpoints:
    enabled-by-default: true
    web:
      exposure:
        include: '*'

  endpoint:
    health:
      show-details: always

info:
  name: ${spring.application.name}
  description: resilience4j
  environment: ${spring.profiles.active}
  version: 0.0.1

# https://resilience4j.readme.io/docs/circuitbreaker
resilience4j.circuitbreaker:
  circuitBreakerAspectOrder: 1
  configs:
    default:
      failureRateThreshold: 1
      minimumNumberOfCalls: 1
      slidingWindowSize: 5
      waitDurationInOpenState: 5000
  instances:
    worldtime_api:
      baseConfig: default
    worldclock_api:
      baseConfig: default

# https://resilience4j.readme.io/docs/retry
resilience4j.retry:
  retryAspectOrder: 10
  configs:
    default:
      maxRetryAttempts: 4
      waitDuration: 100
      retryExceptions:
        - org.springframework.web.client.HttpServerErrorException
        - java.io.IOException
      ignoreExceptions:
        - robert.o.resilience4j.exception.BusinessException
        - io.github.resilience4j.circuitbreaker.CallNotPermittedException
  instances:
    worldtime_api:
      baseConfig: default
    worldclock_api:
      baseConfig: default

# https://resilience4j.readme.io/docs/bulkhead
resilience4j.bulkhead:
  configs:
    default:
      maxWaitDuration: 20ms
      maxConcurrentCalls: 2
  instances:
    worldtime_api:
      baseConfig: default
    worldclock_api:
      baseConfig: default

time_api:
  worldclock_api:
    base_url: http://worldclockapi.com
  worldtime_api:
    base_url: http://worldtimeapi.org/